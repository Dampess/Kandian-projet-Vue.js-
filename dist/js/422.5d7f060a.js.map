{"version":3,"file":"js/422.5d7f060a.js","mappings":"2MAIQA,MAAM,2B,GAIDA,MAAM,sB,GACJA,MAAM,oC,EATrB,wB,GAaeA,MAAM,Q,GACLA,MAAM,yB,GACPA,MAAM,iB,oGAdnBC,EAAAA,EAAAA,IAsBM,aArBJC,EAAAA,EAAAA,IAAqCC,EAAA,CAApBC,QAASC,EAAAD,SAAO,qBAEjCE,EAAAA,EAAAA,IAA8F,KAA9FC,EAAoC,oCAAgCC,EAAAA,EAAAA,IAAGC,EAAAC,OAAOC,MAAMC,GAAI,IAAC,IACzFN,EAAAA,EAAAA,IAcK,MAdDN,OALRa,EAAAA,EAAAA,IAAA,CAKc,mCAAkC,eAAwBR,EAAAS,kB,gBAClEb,EAAAA,EAAAA,IAYKc,EAAAA,GAAA,MAlBXC,EAAAA,EAAAA,IAM2BX,EAAAY,eAAVC,K,WAAXjB,EAAAA,EAAAA,IAYK,MAZgCkB,IAAKD,EAAOE,GAC/CpB,MAAM,+F,EACNM,EAAAA,EAAAA,IASM,MATNe,EASM,EARJf,EAAAA,EAAAA,IAGM,MAHNgB,EAGM,EAFJhB,EAAAA,EAAAA,IACoG,OAD9FiB,IAAG,mCAAuCL,EAAOM,YAAcC,IAAKP,EAAOQ,MAC/E1B,MAAM,0DAA2D2B,QAAKC,GAAEC,EAAAC,iBAAiBZ,I,OAXvGa,MAaUzB,EAAAA,EAAAA,IAGM,MAHN0B,EAGM,EAFJ1B,EAAAA,EAAAA,IAAyD,KAAzD2B,GAAyDzB,EAAAA,EAAAA,IAApBU,EAAOQ,OAAK,IACjDpB,EAAAA,EAAAA,IAAsE,IAAtE4B,GAAsE1B,EAAAA,EAAAA,IAA1CqB,EAAAM,eAAejB,EAAOkB,eAAY,Y,WAOtElC,EAAAA,EAAAA,IAAkFmC,EAAA,CAAvEC,MAAOjC,EAAAkC,cAAgBC,YAAanC,EAAAmC,YAAcC,QAAOZ,EAAAa,Y,oEAQxE,GACEC,WAAY,CACVC,SAAQ,IAAEC,eAAcA,EAAAA,GAE1BC,IAAAA,GACE,MAAO,CACL7B,cAAe,GACfsB,cAAe,KACfC,aAAa,EACb1B,eAAe,EACfV,SAAS,EAEb,EACA,aAAM2C,GACJC,KAAKC,kBACLC,OAAOC,iBAAiB,SAAUH,KAAKC,gBACzC,EACAG,aAAAA,GACEF,OAAOG,oBAAoB,SAAUL,KAAKC,gBAC5C,EACAK,OAAAA,GACEN,KAAKO,mBAAmBP,KAAKtC,OAAOC,MAAMC,EAC5C,EACA4C,MAAO,CACL,SACER,KAAKO,mBAAmBP,KAAKtC,OAAOC,MAAMC,EAC5C,GAEF6C,QAAS,CACP,wBAAMF,CAAmB5C,GACvB,IACE,MAAM+C,EAASC,mCACTC,EAAU,qDAAoDF,uBAA4B/C,IAE1FkD,QAAiBC,MAAMF,GACvBd,QAAae,EAASE,OAExBjB,EAAKkB,SAAWlB,EAAKkB,QAAQC,OAAS,EACxCjB,KAAK/B,cAAgB6B,EAAKkB,QAE1BhB,KAAK/B,cAAgB,EAEzB,CAAE,MAAOiD,GACPC,QAAQD,MAAM,8DAA+DA,GAC7ElB,KAAK/B,cAAgB,EACvB,CACA+B,KAAK5C,SAAU,CACjB,EACA+B,cAAAA,CAAeiC,GACb,OAAOA,EAAcA,EAAYC,UAAU,EAAG,GAAK,yBACrD,EACAvC,gBAAAA,CAAiBQ,GACfU,KAAKT,cAAgBD,EACrBU,KAAKR,aAAc,CACrB,EACAE,UAAAA,GACEM,KAAKR,aAAc,CACrB,EACAS,eAAAA,GACED,KAAKlC,cAAgBoC,OAAOoB,YAAa,GAC3C,I,UCrFJ,MAAMC,GAA2B,OAAgB,EAAQ,CAAC,CAAC,SAASC,KAEpE,O","sources":["webpack://clone-streaming/./src/views/searchResults.vue","webpack://clone-streaming/./src/views/searchResults.vue?6af5"],"sourcesContent":["<template>\r\n  <div>\r\n    <SkeletonLoader :loading=\"loading\" />\r\n    <!-- Contenu principal -->\r\n    <h1 class=\"text-3xl font-bold mb-8\">Résultats de la recherche pour \"{{ $route.query.q }}\"</h1>\r\n    <ul class=\"grid grid-cols-5 gap-2 ml-1 mr-1\" :class=\"{'grid-cols-2':isSmallScreen}\">\r\n      <li v-for=\"result in searchResults\" :key=\"result.id\"\r\n        class=\"flex flex-col items-center p-4 rounded-md shadow-md transition duration-300 hover:shadow-lg\">\r\n        <div class=\"w-full text-center\">\r\n          <div class=\"flex justify-center items-center\">\r\n            <img :src=\"'https://image.tmdb.org/t/p/w500/' + result.poster_path\" :alt=\"result.title\"\r\n              class=\"w-full max-h-400 object-cover rounded-md cursor-pointer\" @click=\"showMovieDetails(result)\">\r\n          </div>\r\n          <div class=\"mt-4\">\r\n            <h2 class=\"text-lg font-semibold\">{{ result.title }}</h2>\r\n            <p class=\"text-gray-500\">{{ getReleaseYear(result.release_date) }}</p>\r\n          </div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n\r\n    <!-- TheModal -->\r\n    <TheModal :movie=\"selectedMovie\" :isModalOpen=\"isModalOpen\" @close=\"closeModal\" />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport TheModal from '../components/TheModal.vue';\r\nimport SkeletonLoader from '../components/SkeletonLoader.vue'\r\n\r\nexport default {\r\n  components: {\r\n    TheModal, SkeletonLoader,\r\n  },\r\n  data() {\r\n    return {\r\n      searchResults: [],\r\n      selectedMovie: null,\r\n      isModalOpen: false,\r\n      isSmallScreen: false,\r\n      loading: true,\r\n    };\r\n  },\r\n  async mounted() {\r\n    this.checkScreenSize();\r\n    window.addEventListener('resize', this.checkScreenSize);\r\n  },\r\n  beforeUnmount() {\r\n    window.removeEventListener('resize', this.checkScreenSize);\r\n  },\r\n  created() {\r\n    this.fetchSearchResults(this.$route.query.q);\r\n  },\r\n  watch: {\r\n    '$route'() {\r\n      this.fetchSearchResults(this.$route.query.q);\r\n    }\r\n  },\r\n  methods: {\r\n    async fetchSearchResults(query) {\r\n      try {\r\n        const apiKey = process.env.VUE_APP_API_KEY;\r\n        const apiUrl = `https://api.themoviedb.org/3/search/movie?api_key=${apiKey}&language=fr&query=${query}`;\r\n\r\n        const response = await fetch(apiUrl);\r\n        const data = await response.json();\r\n\r\n        if (data.results && data.results.length > 0) {\r\n          this.searchResults = data.results;\r\n        } else {\r\n          this.searchResults = [];\r\n        }\r\n      } catch (error) {\r\n        console.error('Erreur lors de la récupération des résultats de recherche :', error);\r\n        this.searchResults = [];\r\n      }\r\n      this.loading = false;\r\n    },\r\n    getReleaseYear(releaseDate) {\r\n      return releaseDate ? releaseDate.substring(0, 4) : 'Date de sortie inconnue';\r\n    },\r\n    showMovieDetails(movie) {\r\n      this.selectedMovie = movie;\r\n      this.isModalOpen = true;\r\n    },\r\n    closeModal() {\r\n      this.isModalOpen = false;\r\n    },\r\n    checkScreenSize() {\r\n      this.isSmallScreen = window.innerWidth <=763\r\n    },\r\n  },\r\n};\r\n</script>\r\n","import { render } from \"./searchResults.vue?vue&type=template&id=3b7631de\"\nimport script from \"./searchResults.vue?vue&type=script&lang=js\"\nexport * from \"./searchResults.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["class","_createElementBlock","_createVNode","_component_SkeletonLoader","loading","$data","_createElementVNode","_hoisted_1","_toDisplayString","_ctx","$route","query","q","_normalizeClass","isSmallScreen","_Fragment","_renderList","searchResults","result","key","id","_hoisted_2","_hoisted_3","src","poster_path","alt","title","onClick","$event","$options","showMovieDetails","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_7","getReleaseYear","release_date","_component_TheModal","movie","selectedMovie","isModalOpen","onClose","closeModal","components","TheModal","SkeletonLoader","data","mounted","this","checkScreenSize","window","addEventListener","beforeUnmount","removeEventListener","created","fetchSearchResults","watch","methods","apiKey","process","apiUrl","response","fetch","json","results","length","error","console","releaseDate","substring","innerWidth","__exports__","render"],"sourceRoot":""}