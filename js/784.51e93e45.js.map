{"version":3,"file":"js/784.51e93e45.js","mappings":"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","sources":["webpack://clone-streaming/./src/views/FilmsAffichage.vue","webpack://clone-streaming/./src/views/FilmsAffichage.vue?4793"],"sourcesContent":["<template>\n    <div class=\"mt-6 w-11/12 mx-auto\">\n        <SkeletonLoader :loading=\"loading\" />\n        <div class=\"flex flex-row\">\n            <h1 class=\"text-4xl font-bold mb-6 ml-4\">Films</h1>\n            <div class=\"genre-menu ml-4 mt-4 mb-6 w-90 h-full text-black\">\n                <select class=\"bg-gray-200 opacity-50 rounded-l-full rounded-r-full w-8/12 mt-2\" id=\"genreSelect\"\n                    v-model=\"selectedGenre\">\n                    <option v-for=\"(genre, index) in genres\" :key=\"index\" :value=\"genre.id\">{{ genre.name }}</option>\n                </select>\n            </div>\n        </div>\n        <ul class=\"grid grid-cols-1 gap-4\">\n            <li v-for=\"(genre, index) in genres\" :key=\"index\" v-show=\"selectedGenre === genre.id\" class=\"mb-8\">\n                <h2 class=\"text-2xl text-gray-900 font-semibold mb-4 ml-8\">{{ genre.name }}</h2>\n                <ul class=\"grid grid-cols-4 gap-2 ml-1 mr-1\" :class=\"{'grid-cols-2':isSmallScreen}\">\n                    <li v-for=\"movie in filteredMovies(genre.movies)\" :key=\"movie.id\"\n                        class=\"flex flex-col items-center rounded-lg shadow-lg p-2 hover:bg-gray-500 transition duration-300 ease-in-out relative\">\n                        <img v-if=\"movie.backdrop_path\" :src=\"'https://image.tmdb.org/t/p/w500/' + movie.backdrop_path\"\n                            :alt=\"movie.title\" class=\"movie-poster rounded-lg cursor-pointer\" @click=\"showModal(movie)\">\n                        <div v-else class=\"no-backdrop-placeholder\">No Backdrop Image Available</div>\n                    </li>\n                </ul>\n            </li>\n        </ul>\n        <!-- TheModal -->\n        <TheModal :movie=\"selectedMovie\" :isModalOpen=\"isModalOpen\" @close=\"closeModal\" />\n    </div>\n</template>\n\n<script>\nimport TheModal from '../components/TheModal.vue';\nimport SkeletonLoader from '../components/SkeletonLoader.vue'\n\nexport default {\n    components: {\n        TheModal, SkeletonLoader\n    },\n    data() {\n        return {\n            genres: [],\n            selectedGenre: null,\n            isModalOpen: false,\n            selectedMovie: null,\n            isSmallScreen: false,\n            loading: true,\n        };\n    },\n    async mounted() {\n        this.fetchGenres();\n        this.checkScreenSize();\n        window.addEventListener('resize', this.checkScreenSize);\n    },\n    beforeUnmount() {\n        window.removeEventListener('resize', this.checkScreenSize);\n    },\n    methods: {\n        async fetchGenres() {\n            try {\n                const apiKey = process.env.VUE_APP_API_KEY;\n                const response = await fetch(`https://api.themoviedb.org/3/genre/movie/list?api_key=${apiKey}&language=fr`);\n                const data = await response.json();\n\n                // Vérifiez si la réponse contient des genres\n                if (data.genres && data.genres.length > 0) {\n                    // Pour chaque genre, récupérez les films associés\n                    for (const genre of data.genres) {\n                        const moviesResponse = await fetch(`https://api.themoviedb.org/3/discover/movie?api_key=${apiKey}&language=fr&with_genres=${genre.id}`);\n                        const moviesData = await moviesResponse.json();\n                        this.genres.push({\n                            id: genre.id,\n                            name: genre.name,\n                            movies: moviesData.results\n                        });\n                    }\n                    // Sélectionner le premier genre par défaut\n                    if (this.genres.length > 0) {\n                        this.selectedGenre = this.genres[0].id;\n                        \n                    }\n                    this.loading = false;\n                }\n            } catch (error) {\n                console.error('Erreur lors de la récupération des genres et des films associés :', error);\n            }\n        },\n        showModal(movie) {\n            this.selectedMovie = movie;\n            this.isModalOpen = true;\n        },\n        closeModal() {\n            this.selectedMovie = null;\n            this.isModalOpen = false;\n        },\n        filteredMovies(movies) {\n            return movies.filter(movie => movie.backdrop_path !== null);\n        },\n        checkScreenSize() {\n            this.isSmallScreen = window.innerWidth <= 763\n        },\n    }\n};\n</script>\n","import { render } from \"./FilmsAffichage.vue?vue&type=template&id=4b3ad51f\"\nimport script from \"./FilmsAffichage.vue?vue&type=script&lang=js\"\nexport * from \"./FilmsAffichage.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["class","_createElementVNode","key","_createElementBlock","_hoisted_1","_createVNode","_component_SkeletonLoader","loading","$data","_hoisted_2","_hoisted_3","_hoisted_4","id","_cache","$event","selectedGenre","_Fragment","_renderList","genres","genre","index","value","name","_hoisted_5","_hoisted_6","_hoisted_7","_toDisplayString","_normalizeClass","isSmallScreen","$options","filteredMovies","movies","movie","backdrop_path","src","alt","title","onClick","showModal","_hoisted_8","_hoisted_9","_component_TheModal","selectedMovie","isModalOpen","onClose","closeModal","components","TheModal","SkeletonLoader","data","mounted","this","fetchGenres","checkScreenSize","window","addEventListener","beforeUnmount","removeEventListener","methods","apiKey","process","response","fetch","json","length","moviesResponse","moviesData","push","results","error","console","filter","innerWidth","__exports__","render"],"sourceRoot":""}